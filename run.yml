- hosts: all
  tags: [never, config]
  become: true
  vars_files:
    - vars/vault.yaml
  pre_tasks:
    - name: Update APT Cache
      tags: [never, init]
      become: true
      apt:
        update_cache: yes
    - name: Add me
      tags: [never, init]
      ansible.builtin.user:
        name: "{{ main_username }}"
        uid: "{{ main_uid }}"
        group: "{{ main_groupname }}"
        shell: /bin/bash
        password: "{{ secret_sudo | password_hash('sha512') }}"
    - name: Add a key
      tags: [never, init]
      ansible.builtin.copy:
        remote_src: yes
        src: /root/.ssh/authorized_keys
        dest: /home/{{ main_username }}/.ssh/authorized_keys
        owner: "{{ main_username }}"
        group: "{{ main_groupname }}"
        mode: "0600"
    - name: Install pip dependencies
      pip:
        name: "{{pip_install_dep_packages}}"
  roles:
    - role: geerlingguy.security
    - role: geerlingguy.ntp
    - role: grog.package

- hosts: docker
  become: true
  vars_files:
    - vars/vault.yaml
  pre_tasks:
    - name: Install docker pip
      pip:
        name: docker
  roles:
    - role: geerlingguy.docker
      tags: [never, config]
    - role: scripts
      tags: [never, config, scripts]

- hosts: docker
  become: true
  vars_files:
    - vars/vault.yaml
  pre_tasks:
    - name: Set Default logging
      tags: [never, init, logging]
      become: true
      register: docker_deamon
      ansible.builtin.copy:
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        content: |
          {
            "log-driver": "journald",
            "log-opts": {
              "mode": "non-blocking"
            }
          }
        mode: "0600"
    - name: Restart servive to apply changes
      tags: [never, init, logging]
      become: true
      when: docker_deamon.changed
      ansible.builtin.service:
        name: docker
        state: restarted

- hosts: edge
  become: true
  vars_files:
    - vars/vault.yaml
  tags: [edge]
  tasks:
    - name: Edge containers
      ansible.builtin.include_role:
        name: docker_generator
      vars:
        docker_service: "{{ item }}"
      with_items:
        - organizr
        - cfddns
        - traefik
        - autoheal
        - plausible
        - privatebin
        - auth_LDAP
  roles:
    - role: traefik
    - role: plausible
    - role: privatebin

- hosts: bots
  become: true
  vars_files:
    - vars/vault.yaml
  roles:
    - role: docker_generator
      vars:
        docker_service: rclone
    - role: rclone

- hosts: bots
  become: true
  vars_files:
    - vars/vault.yaml
  tags: [bots, my_bots]
  tasks:
    - name: My bots
      ansible.builtin.include_role:
        name: docker_generator
      vars:
        docker_service: "{{ item }}"
      with_items:
        - publisher
        - progbot
        - shite

- hosts: bots
  become: true
  vars_files:
    - vars/vault.yaml
  tags: [bots, red_bots]
  tasks:
    - name: RedBots
      ansible.builtin.include_role:
        name: docker_generator
      vars:
        docker_service: "{{ item }}"
      loop:
        - unraider
        - hawkbot
        - orgbot

- hosts: bots
  become: true
  vars_files:
    - vars/vault.yaml
  tags: [containers]
  tasks:
    - name: Containers
      ansible.builtin.include_role:
        name: docker_generator
      vars:
        docker_service: "{{ item }}"
      loop:
        - monitorrs
        - huginn
        - xbb

- hosts: all
  become: true
  tags: [update]
  vars_files:
    - vars/vault.yaml

  tasks:
    # https://www.cyberciti.biz/faq/ansible-apt-update-all-packages-on-ubuntu-debian-linux/
    - name: Update packages
      when: ansible_distribution == 'Ubuntu'
      ansible.builtin.apt:
        update_cache: "True"
        force_apt_get: "True"
        cache_valid_time: 3600
        upgrade: "True"

    - name: Remove ubuntu motd spam
      ansible.builtin.file:
        path: /etc/update-motd.d/{{ item }}
        state: absent
      loop:
        - 10-help-text
        - 50-landscape-sysinfo
        - 50-motd-news
        - 80-livepatch
        - 90-updates-available
        - 95-hwe-eol
      when: ansible_distribution == 'Ubuntu'

    - name: Update packages
      when: ansible_distribution == 'Ubuntu'
      ansible.builtin.apt:
        update_cache: "True"
        force_apt_get: "True"
        cache_valid_time: 3600
        upgrade: "True"

    - name: Check if a reboot is needed for Debian and Ubuntu boxes
      register: reboot_required_file
      when: ansible_distribution == 'Ubuntu'
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_md5: no

    - name: Reboot the server
      throttle: 1
      ansible.builtin.reboot:
        msg: Reboot initiated by Ansible due to kernel updates
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists and ansible_distribution == 'Ubuntu'
